@model TaskManagementSystem.Models.TaskItem

@{
    ViewData["Title"] = "Delete Task";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h1>Delete Task</h1>
            <div class="alert alert-danger" role="alert">
                <h4 class="alert-heading">Warning!</h4>
                <p>Are you sure you want to delete this task? This operation cannot be undone.</p>
            </div>
            
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">@Model.Title</h5>
                    <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6 class="fw-bold">Description</h6>
                        <p class="card-text">@(string.IsNullOrEmpty(Model.Description) ? "No description provided." : Model.Description)</p>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <h6 class="fw-bold">Due Date</h6>
                            <p>@Model.DueDate.ToString("MMMM dd, yyyy")</p>
                        </div>
                        <div class="col-md-6">
                            <h6 class="fw-bold">Created By</h6>
                            <p>@(Model.User?.UserName ?? "Unknown")</p>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="fw-bold">Created At</h6>
                            <p>@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</p>
                        </div>
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="col-md-6">
                                <h6 class="fw-bold">Last Updated</h6>
                                <p>@Model.UpdatedAt.Value.ToString("MMM dd, yyyy HH:mm")</p>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-footer bg-transparent">
                    <form asp-action="Delete" class="d-flex justify-content-between">
                        <input type="hidden" asp-for="Id" />
                        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(TaskManagementSystem.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManagementSystem.Models.TaskStatus.ToDo => "bg-secondary",
            TaskManagementSystem.Models.TaskStatus.InProgress => "bg-primary",
            TaskManagementSystem.Models.TaskStatus.Done => "bg-success",
            _ => "bg-secondary"
        };
    }
} 