@model TaskManagementSystem.Models.TaskItem

@{
    ViewData["Title"] = "Task Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h1>Task Details</h1>
            <hr />
            
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">@Model.Title</h5>
                    <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6 class="fw-bold">Description</h6>
                        <p class="card-text">@(string.IsNullOrEmpty(Model.Description) ? "No description provided." : Model.Description)</p>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <h6 class="fw-bold">Due Date</h6>
                            <p>@Model.DueDate.ToString("MMMM dd, yyyy")</p>
                        </div>
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="col-md-6">
                                <h6 class="fw-bold">Created By</h6>
                                <p>@(Model.User?.UserName ?? "Unknown")</p>
                            </div>
                        }
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="fw-bold">Created At</h6>
                            <p>@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</p>
                        </div>
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="col-md-6">
                                <h6 class="fw-bold">Last Updated</h6>
                                <p>@Model.UpdatedAt.Value.ToString("MMM dd, yyyy HH:mm")</p>
                            </div>
                        }
                    </div>
                    
                    <div class="mb-3">
                        <h5 class="text-white-50">Priority</h5>
                        <span class="badge @GetPriorityBadgeClass(Model.Priority)">@Model.Priority</span>
                    </div>
                </div>
                <div class="card-footer bg-transparent">
                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                        <div>
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">Edit</a>
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Change Status</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex gap-2 justify-content-center">
                        <a asp-action="ChangeStatus" asp-route-id="@Model.Id" asp-route-status="ToDo" 
                           class="btn @(Model.Status == TaskManagementSystem.Models.TaskStatus.ToDo ? "btn-secondary disabled" : "btn-outline-secondary")">
                            To Do
                        </a>
                        <a asp-action="ChangeStatus" asp-route-id="@Model.Id" asp-route-status="InProgress" 
                           class="btn @(Model.Status == TaskManagementSystem.Models.TaskStatus.InProgress ? "btn-primary disabled" : "btn-outline-primary")">
                            In Progress
                        </a>
                        <a asp-action="ChangeStatus" asp-route-id="@Model.Id" asp-route-status="Done" 
                           class="btn @(Model.Status == TaskManagementSystem.Models.TaskStatus.Done ? "btn-success disabled" : "btn-outline-success")">
                            Done
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(TaskManagementSystem.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManagementSystem.Models.TaskStatus.ToDo => "bg-secondary",
            TaskManagementSystem.Models.TaskStatus.InProgress => "bg-primary",
            TaskManagementSystem.Models.TaskStatus.Done => "bg-success",
            _ => "bg-secondary"
        };
    }
    
    string GetPriorityBadgeClass(TaskManagementSystem.Models.TaskPriority priority)
    {
        return priority switch
        {
            TaskManagementSystem.Models.TaskPriority.Low => "bg-info",
            TaskManagementSystem.Models.TaskPriority.Medium => "bg-warning",
            TaskManagementSystem.Models.TaskPriority.High => "bg-danger",
            _ => "bg-warning"
        };
    }
} 